{"ast":null,"code":"var _jsxFileName = \"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './ImageGrid.module.css';\nimport { getBlocks } from '../../blocks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageGrid = () => {\n  _s();\n\n  const [blocks, setBlocks] = React.useState(null); // const [info, setInfo] = React.useState<Block|undefined>(undefined);\n  //Load the blocks \n\n  React.useEffect(() => {\n    let abortController = new AbortController();\n    let aborted = abortController.signal.aborted;\n\n    (async () => {\n      const resp = await getBlocks();\n      aborted = abortController.signal.aborted;\n\n      if (aborted === false) {\n        setBlocks(resp);\n      }\n    })();\n\n    return () => abortController.abort();\n  }, []); //Iterate the blocks and put the blocks of type Image into an array and return the array\n\n  function SelectImg(rootblock) {\n    let imgarr = [];\n\n    if (rootblock) {\n      if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Image') imgarr.push(rootblock);else if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Column' && rootblock !== null && rootblock !== void 0 && rootblock.children) rootblock === null || rootblock === void 0 ? void 0 : rootblock.children.map(el => {\n        if (el.type === 'Image') {\n          imgarr.push(el);\n        } else if (el.type === 'Column' && el.children) SelectImg(el);\n\n        return imgarr;\n      });\n    }\n\n    return imgarr;\n  }\n\n  var imgArr = [];\n  if (blocks) imgArr = SelectImg(blocks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [imgArr ? imgArr.map((img, index) => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 49\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageGrid, \"rIMWF6nvXGTEtg9+OamPER3DO/M=\");\n\n_c = ImageGrid;\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    //padding: theme.spacing(0),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    height: theme.spacing(40)\n  };\n});\n_c2 = Item;\nexport const ImageGridO = props => {\n  _s2();\n\n  var _data$options, _data$options3, _data$data2, _data$data2$descripti;\n\n  const {\n    data,\n    info,\n    onClick\n  } = props;\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    if (info !== null && info !== void 0 && info.id) {\n      navigate('/' + (info === null || info === void 0 ? void 0 : info.id));\n    }\n  }, [info]);\n\n  if (!(data !== null && data !== void 0 && (_data$options = data.options) !== null && _data$options !== void 0 && _data$options.url)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imageGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }, this);\n  }\n\n  if ((data === null || data === void 0 ? void 0 : data.id) === (info === null || info === void 0 ? void 0 : info.id)) {\n    var _data$options2, _data$data, _data$data$descriptio;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Item, {\n        sx: {\n          borderColor: 'green',\n          borderStyle: 'solid',\n          borderWidth: '0.2em'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data === null || data === void 0 ? void 0 : (_data$options2 = data.options) === null || _data$options2 === void 0 ? void 0 : _data$options2.url,\n          alt: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$descriptio = _data$data.description) === null || _data$data$descriptio === void 0 ? void 0 : _data$data$descriptio.toString(),\n          width: \"100%\",\n          height: \"100%\",\n          onClick: onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 14\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Item, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data === null || data === void 0 ? void 0 : (_data$options3 = data.options) === null || _data$options3 === void 0 ? void 0 : _data$options3.url,\n        alt: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : (_data$data2$descripti = _data$data2.description) === null || _data$data2$descripti === void 0 ? void 0 : _data$data2$descripti.toString(),\n        width: \"100%\",\n        height: \"100%\",\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 14\n  }, this);\n};\n\n_s2(ImageGridO, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", true);\n\n_c3 = ImageGridO;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ImageGrid\");\n$RefreshReg$(_c2, \"Item\");\n$RefreshReg$(_c3, \"ImageGridO\");","map":{"version":3,"sources":["/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx"],"names":["React","styles","getBlocks","ImageGrid","blocks","setBlocks","useState","useEffect","abortController","AbortController","aborted","signal","resp","abort","SelectImg","rootblock","imgarr","type","push","children","map","el","imgArr","container","img","index","Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","textAlign","color","text","primary","height","spacing","ImageGridO","props","data","info","onClick","navigate","useNavigate","id","options","url","imageGrid","borderColor","borderStyle","borderWidth","description","toString"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport styles from './ImageGrid.module.css';\nimport { Block,getBlocks } from '../../blocks';\n\nexport const ImageGrid = () => {\n\n    const [blocks, setBlocks] = React.useState<Block | null>(null);\n    // const [info, setInfo] = React.useState<Block|undefined>(undefined);\n \n  //Load the blocks \n  React.useEffect(()=>{\n    let abortController: AbortController = new AbortController();\n    let aborted = abortController.signal.aborted;\n\n    (async ()=>{\n      const resp = await getBlocks();\n      aborted = abortController.signal.aborted;\n      if (aborted === false) {\n        setBlocks(resp);\n      }\n    })();\n\n    return () => abortController.abort();\n  },[])\n \n  //Iterate the blocks and put the blocks of type Image into an array and return the array\n  function SelectImg(rootblock:Block|null): Block[]{\n    let imgarr:Block[] = [];\n    if(rootblock){\n      if(rootblock?.type==='Image') imgarr.push(rootblock);      \n      else if(rootblock?.type==='Column'&&rootblock?.children) \n        rootblock?.children.map((el)=> {\n          if(el.type==='Image') {\n            imgarr.push(el);\n          }\n          else if(el.type==='Column'&& el.children) SelectImg(el);\n          return imgarr;\n        })\n    }\n    return imgarr;\n  }\n  var imgArr:Block[] = [];\n\n  if(blocks) imgArr = SelectImg(blocks);\n\n    return(\n        <div className={styles.container}>\n            {\n                imgArr?imgArr.map((img,index)=>{<div></div>}):(<div></div>)    \n            }\n            <div>1</div>\n            <div>2</div>\n            <div>3</div>\n            <div>4</div>\n            <div>5</div>\n            <div>6</div>\n            <div>7</div>\n            <div>8</div>\n            <div>9</div>\n        </div>\n    )\n}\n\ntype ImageGridProps = {\n    data?: Block;\n    info?: Block;\n    onClick?: (event: React.MouseEvent<HTMLElement>) => void\n  };\n  \n  const Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    //padding: theme.spacing(0),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    height: theme.spacing(40)\n  }));\n  \n  \n  export const ImageGridO = (props: ImageGridProps) => {\n    const { data,info,onClick } = props;\n    const navigate = useNavigate();\n    \n    \n    React.useEffect(()=>{\n      if (info?.id) {\n        navigate('/'+info?.id);\n      }\n    },[info])\n     \n    if(!data?.options?.url){\n      return <div className={styles.imageGrid}></div>;\n    }\n    if (data?.id===info?.id) {\n      return <div >\n        <Item sx={{borderColor: 'green', borderStyle: 'solid', borderWidth: '0.2em'}}>\n          <img src={data?.options?.url} alt={data?.data?.description?.toString()} width=\"100%\" height=\"100%\" onClick={onClick}/>\n        </Item> \n      </div>\n    }\n    else\n      return <div >\n        <Item >\n          <img src={data?.options?.url} alt={data?.data?.description?.toString()} width=\"100%\" height=\"100%\" onClick={onClick}/>\n        </Item> \n      </div>\n  ;\n  };"]},"metadata":{},"sourceType":"module"}