{"ast":null,"code":"var _jsxFileName = \"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './ImageGrid.module.css';\nimport { getBlocks } from '../../blocks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// export const ImageGrid = (props: ImageGridProps) => {\n//   return <div className={styles.imageGrid}>Replace me</div>;\n// };\nexport const ImageGrid = props => {\n  _s();\n\n  const blocks = props.data; // const [blocks, setBlocks] = React.useState<Block | null>(null);\n  // const [info, setInfo] = React.useState<Block|undefined>(undefined);\n  //Load the blocks \n\n  React.useEffect(() => {\n    let abortController = new AbortController();\n    let aborted = abortController.signal.aborted;\n\n    (async () => {\n      const resp = await getBlocks();\n      aborted = abortController.signal.aborted;\n\n      if (aborted === false) {\n        // console.log(resp);\n        setBlocks(resp);\n      }\n    })();\n\n    return () => abortController.abort();\n  }, []); //Iterate the blocks and put the blocks of type Image into an array and return the array\n\n  function SelectImg(rootblock) {\n    let imgarr = [];\n\n    if (rootblock) {\n      if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Image') imgarr.push(rootblock);else if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Column' && rootblock !== null && rootblock !== void 0 && rootblock.children) rootblock === null || rootblock === void 0 ? void 0 : rootblock.children.map(el => {\n        if (el.type === 'Image') {\n          imgarr.push(el);\n        } else if (el.type === 'Column' && el.children) imgarr = imgarr.concat(SelectImg(el));\n      });\n    }\n\n    console.log(\"return imgarr\", imgarr);\n    return imgarr;\n  }\n\n  var imgArr = [];\n  if (blocks) imgArr = SelectImg(blocks);\n  console.log(\"imgArr \", imgArr);\n\n  function handleClick(e) {\n    var _e$data;\n\n    console.log(e === null || e === void 0 ? void 0 : (_e$data = e.data) === null || _e$data === void 0 ? void 0 : _e$data.description.toString());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: imgArr ? imgArr.map((img, index) => {\n      var _img$options, _img$data, _img$data$description;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img === null || img === void 0 ? void 0 : (_img$options = img.options) === null || _img$options === void 0 ? void 0 : _img$options.url,\n          alt: img === null || img === void 0 ? void 0 : (_img$data = img.data) === null || _img$data === void 0 ? void 0 : (_img$data$description = _img$data.description) === null || _img$data$description === void 0 ? void 0 : _img$data$description.toString(),\n          width: \"100%\",\n          height: \"100%\",\n          onClick: () => handleClick(img)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx"],"names":["React","styles","getBlocks","ImageGrid","props","blocks","data","useEffect","abortController","AbortController","aborted","signal","resp","setBlocks","abort","SelectImg","rootblock","imgarr","type","push","children","map","el","concat","console","log","imgArr","handleClick","e","description","toString","container","img","index","options","url"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport styles from './ImageGrid.module.css';\nimport { Block,getBlocks } from '../../blocks';\n\ntype ImageGridProps = {\n  data?: Block;\n};\n\n// export const ImageGrid = (props: ImageGridProps) => {\n//   return <div className={styles.imageGrid}>Replace me</div>;\n// };\n\nexport const ImageGrid = (props: ImageGridProps) => {\n\n    const blocks = props.data;\n    // const [blocks, setBlocks] = React.useState<Block | null>(null);\n    // const [info, setInfo] = React.useState<Block|undefined>(undefined);\n \n    //Load the blocks \n    React.useEffect(()=>{\n        let abortController: AbortController = new AbortController();\n        let aborted = abortController.signal.aborted;\n\n        (async ()=>{\n        const resp = await getBlocks();\n        aborted = abortController.signal.aborted;\n        if (aborted === false) {\n            // console.log(resp);\n            setBlocks(resp);\n        }\n        })();\n\n        return () => abortController.abort();\n    },[])\n    \n    //Iterate the blocks and put the blocks of type Image into an array and return the array\n    function SelectImg(rootblock:Block|null): Block[]{\n        let imgarr:Block[] = [];\n        if(rootblock){\n        if(rootblock?.type==='Image') imgarr.push(rootblock);      \n        else if(rootblock?.type==='Column'&&rootblock?.children) \n            rootblock?.children.map((el)=> {\n            if(el.type==='Image') {\n                imgarr.push(el);\n            }\n            else if(el.type==='Column'&& el.children) imgarr=imgarr.concat(SelectImg(el));\n            })\n        }\n        console.log(\"return imgarr\", imgarr)\n        return imgarr;\n    }\n    var imgArr:Block[] = [];\n\n    if(blocks) imgArr = SelectImg(blocks);\n    console.log(\"imgArr \",imgArr)\n\n    function handleClick(e:Block){\n        console.log(e?.data?.description.toString());\n    }\n\n    return(\n        <div className={styles.container}>\n            {\n                imgArr?imgArr.map((img,index)=>{return(\n                    <div key={index}>\n                        <img \n                        key={index}\n                        src={img?.options?.url} \n                        alt={img?.data?.description?.toString()} \n                        width=\"100%\" height=\"100%\" \n                        onClick={()=>handleClick(img)}\n                        />\n                    </div>\n                )            \n                }):(<div></div>)    \n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}