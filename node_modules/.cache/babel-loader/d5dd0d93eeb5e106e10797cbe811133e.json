{"ast":null,"code":"var _jsxFileName = \"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx\";\nimport React from 'react';\nimport styles from './ImageGrid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageGrid = props => {\n  const {\n    blocks,\n    onClick\n  } = props;\n  ; //Iterate the blocks and put the blocks of type Image into an array and return the array\n\n  function SelectImg(rootblock) {\n    let imgarr = [];\n\n    if (rootblock) {\n      if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Image') imgarr.push(rootblock);else if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Column' && rootblock !== null && rootblock !== void 0 && rootblock.children) rootblock === null || rootblock === void 0 ? void 0 : rootblock.children.map(el => {\n        if (el.type === 'Image') {\n          imgarr.push(el);\n        } else if (el.type === 'Column' && el.children) imgarr = imgarr.concat(SelectImg(el));\n      });\n    } // console.log(\"return imgarr\", imgarr)\n\n\n    return imgarr;\n  }\n\n  var imgArr = [];\n  if (blocks) imgArr = SelectImg(blocks);\n  console.log(\"imgArr \", imgArr);\n\n  function handleClick(e) {\n    var _e$data;\n\n    console.log(e === null || e === void 0 ? void 0 : (_e$data = e.data) === null || _e$data === void 0 ? void 0 : _e$data.description.toString());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.imageGrid,\n    children: imgArr ? imgArr.map((img, index) => {\n      var _img$options, _img$data, _img$data$description;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          return props.onClick ? props.onClick(img) : null;\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img === null || img === void 0 ? void 0 : (_img$options = img.options) === null || _img$options === void 0 ? void 0 : _img$options.url,\n          alt: img === null || img === void 0 ? void 0 : (_img$data = img.data) === null || _img$data === void 0 ? void 0 : (_img$data$description = _img$data.description) === null || _img$data$description === void 0 ? void 0 : _img$data$description.toString(),\n          width: \"100%\",\n          height: \"100%\" // onClick={()=>handleClick(img)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx"],"names":["React","styles","ImageGrid","props","blocks","onClick","SelectImg","rootblock","imgarr","type","push","children","map","el","concat","imgArr","console","log","handleClick","e","data","description","toString","imageGrid","img","index","options","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;AASA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAA2B;AAEhD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBF,KAA5B;AAAkC,GAFc,CAIhD;;AACA,WAASG,SAAT,CAAmBC,SAAnB,EAAiD;AAC7C,QAAIC,MAAc,GAAG,EAArB;;AACA,QAAGD,SAAH,EAAa;AACb,UAAG,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,IAAX,MAAkB,OAArB,EAA8BD,MAAM,CAACE,IAAP,CAAYH,SAAZ,EAA9B,KACK,IAAG,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,IAAX,MAAkB,QAAlB,IAA4BF,SAA5B,aAA4BA,SAA5B,eAA4BA,SAAS,CAAEI,QAA1C,EACDJ,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEI,QAAX,CAAoBC,GAApB,CAAyBC,EAAD,IAAO;AAC/B,YAAGA,EAAE,CAACJ,IAAH,KAAU,OAAb,EAAsB;AAClBD,UAAAA,MAAM,CAACE,IAAP,CAAYG,EAAZ;AACH,SAFD,MAGK,IAAGA,EAAE,CAACJ,IAAH,KAAU,QAAV,IAAqBI,EAAE,CAACF,QAA3B,EAAqCH,MAAM,GAACA,MAAM,CAACM,MAAP,CAAcR,SAAS,CAACO,EAAD,CAAvB,CAAP;AACzC,OALD;AAMH,KAX4C,CAY7C;;;AACA,WAAOL,MAAP;AACH;;AACD,MAAIO,MAAc,GAAG,EAArB;AAEA,MAAGX,MAAH,EAAWW,MAAM,GAAGT,SAAS,CAACF,MAAD,CAAlB;AACXY,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAtB;;AAEA,WAASG,WAAT,CAAqBC,CAArB,EAA6B;AAAA;;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ,aAAYA,CAAZ,kCAAYA,CAAC,CAAEC,IAAf,4CAAY,QAASC,WAAT,CAAqBC,QAArB,EAAZ;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,SAAvB;AAAA,cAEQR,MAAM,GAACA,MAAM,CAACH,GAAP,CAAW,CAACY,GAAD,EAAKC,KAAL,KAAa;AAAA;;AAAC,0BAC5B;AAAiB,QAAA,OAAO,EAAE,MAAI;AACtB,iBAAOtB,KAAK,CAACE,OAAN,GAAcF,KAAK,CAACE,OAAN,CAAcmB,GAAd,CAAd,GAAiC,IAAxC;AACH,SAFL;AAAA,+BAGI;AACA,UAAA,GAAG,EAAEA,GAAF,aAAEA,GAAF,uCAAEA,GAAG,CAAEE,OAAP,iDAAE,aAAcC,GADnB;AAEA,UAAA,GAAG,EAAEH,GAAF,aAAEA,GAAF,oCAAEA,GAAG,CAAEJ,IAAP,uEAAE,UAAWC,WAAb,0DAAE,sBAAwBC,QAAxB,EAFL;AAGA,UAAA,KAAK,EAAC,MAHN;AAGa,UAAA,MAAM,EAAC,MAHpB,CAIA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAHJ,SAAUG,KAAV;AAAA;AAAA;AAAA;AAAA,cAD4B;AAa/B,KAbM,CAAD,gBAaF;AAAA;AAAA;AAAA;AAAA;AAfZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAjDM;KAAMvB,S","sourcesContent":["import React from 'react';\n\nimport styles from './ImageGrid.module.css';\nimport { Block } from '../../blocks';\n\ntype ImageGridProps = {\n    blocks?: Block;\n//   onClick?: (event: React.MouseEvent<HTMLElement>) => void\n    onClick?: (img: Block) => void\n};\n\nexport const ImageGrid = (props: ImageGridProps) => {\n\n    const { blocks, onClick } = props;;\n    \n    //Iterate the blocks and put the blocks of type Image into an array and return the array\n    function SelectImg(rootblock:Block|null): Block[]{\n        let imgarr:Block[] = [];\n        if(rootblock){\n        if(rootblock?.type==='Image') imgarr.push(rootblock);      \n        else if(rootblock?.type==='Column'&&rootblock?.children) \n            rootblock?.children.map((el)=> {\n            if(el.type==='Image') {\n                imgarr.push(el);\n            }\n            else if(el.type==='Column'&& el.children) imgarr=imgarr.concat(SelectImg(el));\n            })\n        }\n        // console.log(\"return imgarr\", imgarr)\n        return imgarr;\n    }\n    var imgArr:Block[] = [];\n\n    if(blocks) imgArr = SelectImg(blocks);\n    console.log(\"imgArr \",imgArr)\n\n    function handleClick(e:Block){\n        console.log(e?.data?.description.toString());\n    }\n\n    return(\n        <div className={styles.imageGrid}>\n            {\n                imgArr?imgArr.map((img,index)=>{return(\n                    <div key={index} onClick={()=>{\n                            return props.onClick?props.onClick(img):null\n                        }}>\n                        <img\n                        src={img?.options?.url} \n                        alt={img?.data?.description?.toString()} \n                        width=\"100%\" height=\"100%\" \n                        // onClick={()=>handleClick(img)}\n                        \n                        />\n                    </div>\n                )            \n                }):(<div></div>)    \n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}