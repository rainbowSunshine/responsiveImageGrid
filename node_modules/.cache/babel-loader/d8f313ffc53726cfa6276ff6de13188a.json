{"ast":null,"code":"var _jsxFileName = \"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid_old.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from './ImageGrid.module.css';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    //padding: theme.spacing(0),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    height: theme.spacing(40)\n  };\n});\n_c = Item;\nexport const ImageGridO = props => {\n  _s();\n\n  var _data$options, _data$options3, _data$data2, _data$data2$descripti;\n\n  const {\n    data,\n    info,\n    onClick\n  } = props;\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    if (info !== null && info !== void 0 && info.id) {\n      navigate('/' + (info === null || info === void 0 ? void 0 : info.id));\n    }\n  }, [info]);\n\n  if (!(data !== null && data !== void 0 && (_data$options = data.options) !== null && _data$options !== void 0 && _data$options.url)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imageGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  if ((data === null || data === void 0 ? void 0 : data.id) === (info === null || info === void 0 ? void 0 : info.id)) {\n    var _data$options2, _data$data, _data$data$descriptio;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Item, {\n        sx: {\n          borderColor: 'green',\n          borderStyle: 'solid',\n          borderWidth: '0.2em'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data === null || data === void 0 ? void 0 : (_data$options2 = data.options) === null || _data$options2 === void 0 ? void 0 : _data$options2.url,\n          alt: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$descriptio = _data$data.description) === null || _data$data$descriptio === void 0 ? void 0 : _data$data$descriptio.toString(),\n          width: \"100%\",\n          height: \"100%\",\n          onClick: onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Item, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data === null || data === void 0 ? void 0 : (_data$options3 = data.options) === null || _data$options3 === void 0 ? void 0 : _data$options3.url,\n        alt: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : (_data$data2$descripti = _data$data2.description) === null || _data$data2$descripti === void 0 ? void 0 : _data$data2$descripti.toString(),\n        width: \"100%\",\n        height: \"100%\",\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ImageGridO, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = ImageGridO;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ImageGridO\");","map":{"version":3,"sources":["/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid_old.tsx"],"names":["styles","React","useNavigate","experimentalStyled","styled","Paper","Item","theme","backgroundColor","palette","mode","typography","body2","textAlign","color","text","primary","height","spacing","ImageGridO","props","data","info","onClick","navigate","useEffect","id","options","url","imageGrid","borderColor","borderStyle","borderWidth","description","toString"],"mappings":"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","sourcesContent":["import styles from './ImageGrid.module.css';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Block } from '../../blocks';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\n\ntype ImageGridProps = {\n  data?: Block;\n  info?: Block;\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n};\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  //padding: theme.spacing(0),\n  textAlign: 'center',\n  color: theme.palette.text.primary,\n  height: theme.spacing(40)\n}));\n\n\nexport const ImageGridO = (props: ImageGridProps) => {\n  const { data,info,onClick } = props;\n  const navigate = useNavigate();\n  \n  \n  React.useEffect(()=>{\n    if (info?.id) {\n      navigate('/'+info?.id);\n    }\n  },[info])\n   \n  if(!data?.options?.url){\n    return <div className={styles.imageGrid}></div>;\n  }\n  if (data?.id===info?.id) {\n    return <div >\n      <Item sx={{borderColor: 'green', borderStyle: 'solid', borderWidth: '0.2em'}}>\n        <img src={data?.options?.url} alt={data?.data?.description?.toString()} width=\"100%\" height=\"100%\" onClick={onClick}/>\n      </Item> \n    </div>\n  }\n  else\n    return <div >\n      <Item >\n        <img src={data?.options?.url} alt={data?.data?.description?.toString()} width=\"100%\" height=\"100%\" onClick={onClick}/>\n      </Item> \n    </div>\n;\n};\n"]},"metadata":{},"sourceType":"module"}