{"ast":null,"code":"var _jsxFileName = \"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './ImageGrid.module.css';\nimport { getBlocks } from '../../blocks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageGrid = () => {\n  _s();\n\n  const [blocks, setBlocks] = React.useState(null); // const [info, setInfo] = React.useState<Block|undefined>(undefined);\n  //Load the blocks \n\n  React.useEffect(() => {\n    let abortController = new AbortController();\n    let aborted = abortController.signal.aborted;\n\n    (async () => {\n      const resp = await getBlocks();\n      aborted = abortController.signal.aborted;\n\n      if (aborted === false) {\n        setBlocks(resp);\n      }\n    })();\n\n    return () => abortController.abort();\n  }, []); //Iterate the blocks and put the blocks of type Image into an array and return the array\n\n  function SelectImg(rootblock) {\n    let imgarr = [];\n\n    if (rootblock) {\n      if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Image') imgarr.push(rootblock);else if ((rootblock === null || rootblock === void 0 ? void 0 : rootblock.type) === 'Column' && rootblock !== null && rootblock !== void 0 && rootblock.children) rootblock === null || rootblock === void 0 ? void 0 : rootblock.children.map(el => {\n        if (el.type === 'Image') {\n          imgarr.push(el);\n        } else if (el.type === 'Column' && el.children) SelectImg(el);\n\n        return imgarr;\n      });\n    }\n\n    return imgarr;\n  }\n\n  var imgArr = [];\n  if (blocks) imgArr = SelectImg(blocks);\n  console.log(imgArr);\n\n  function handleClick(e) {\n    console.log(e);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: imgArr ? imgArr.map((img, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageGrid, \"rIMWF6nvXGTEtg9+OamPER3DO/M=\");\n\n_c = ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx"],"names":["React","styles","getBlocks","ImageGrid","blocks","setBlocks","useState","useEffect","abortController","AbortController","aborted","signal","resp","abort","SelectImg","rootblock","imgarr","type","push","children","map","el","imgArr","console","log","handleClick","e","container","img","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAeC,SAAf,QAAgC,cAAhC;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAA6B,IAA7B,CAA5B,CAF2B,CAG3B;AAEA;;AACAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAI;AAChB,QAAIC,eAAgC,GAAG,IAAIC,eAAJ,EAAvC;AACA,QAAIC,OAAO,GAAGF,eAAe,CAACG,MAAhB,CAAuBD,OAArC;;AAEA,KAAC,YAAU;AACX,YAAME,IAAI,GAAG,MAAMV,SAAS,EAA5B;AACAQ,MAAAA,OAAO,GAAGF,eAAe,CAACG,MAAhB,CAAuBD,OAAjC;;AACA,UAAIA,OAAO,KAAK,KAAhB,EAAuB;AACnBL,QAAAA,SAAS,CAACO,IAAD,CAAT;AACH;AACA,KAND;;AAQA,WAAO,MAAMJ,eAAe,CAACK,KAAhB,EAAb;AACH,GAbD,EAaE,EAbF,EAN2B,CAqB3B;;AACA,WAASC,SAAT,CAAmBC,SAAnB,EAAiD;AAC7C,QAAIC,MAAc,GAAG,EAArB;;AACA,QAAGD,SAAH,EAAa;AACb,UAAG,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,IAAX,MAAkB,OAArB,EAA8BD,MAAM,CAACE,IAAP,CAAYH,SAAZ,EAA9B,KACK,IAAG,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,IAAX,MAAkB,QAAlB,IAA4BF,SAA5B,aAA4BA,SAA5B,eAA4BA,SAAS,CAAEI,QAA1C,EACDJ,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEI,QAAX,CAAoBC,GAApB,CAAyBC,EAAD,IAAO;AAC/B,YAAGA,EAAE,CAACJ,IAAH,KAAU,OAAb,EAAsB;AAClBD,UAAAA,MAAM,CAACE,IAAP,CAAYG,EAAZ;AACH,SAFD,MAGK,IAAGA,EAAE,CAACJ,IAAH,KAAU,QAAV,IAAqBI,EAAE,CAACF,QAA3B,EAAqCL,SAAS,CAACO,EAAD,CAAT;;AAC1C,eAAOL,MAAP;AACC,OAND;AAOH;;AACD,WAAOA,MAAP;AACH;;AACD,MAAIM,MAAc,GAAG,EAArB;AAEA,MAAGlB,MAAH,EAAWkB,MAAM,GAAGR,SAAS,CAACV,MAAD,CAAlB;AACXmB,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,WAASG,WAAT,CAAqBC,CAArB,EAA8B;AAC1BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,SAAvB;AAAA,cAEQL,MAAM,GAACA,MAAM,CAACF,GAAP,CAAW,CAACQ,GAAD,EAAKC,KAAL,KAAa;AAAC,0BAC5B;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cAD4B;AAW/B,KAXM,CAAD,gBAWF;AAAA;AAAA;AAAA;AAAA;AAbZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAhEM;;GAAM1B,S;;KAAAA,S","sourcesContent":["import React from 'react';\n\nimport styles from './ImageGrid.module.css';\nimport { Block,getBlocks } from '../../blocks';\n\nexport const ImageGrid = () => {\n\n    const [blocks, setBlocks] = React.useState<Block | null>(null);\n    // const [info, setInfo] = React.useState<Block|undefined>(undefined);\n \n    //Load the blocks \n    React.useEffect(()=>{\n        let abortController: AbortController = new AbortController();\n        let aborted = abortController.signal.aborted;\n\n        (async ()=>{\n        const resp = await getBlocks();\n        aborted = abortController.signal.aborted;\n        if (aborted === false) {\n            setBlocks(resp);\n        }\n        })();\n\n        return () => abortController.abort();\n    },[])\n    \n    //Iterate the blocks and put the blocks of type Image into an array and return the array\n    function SelectImg(rootblock:Block|null): Block[]{\n        let imgarr:Block[] = [];\n        if(rootblock){\n        if(rootblock?.type==='Image') imgarr.push(rootblock);      \n        else if(rootblock?.type==='Column'&&rootblock?.children) \n            rootblock?.children.map((el)=> {\n            if(el.type==='Image') {\n                imgarr.push(el);\n            }\n            else if(el.type==='Column'&& el.children) SelectImg(el);\n            return imgarr;\n            })\n        }\n        return imgarr;\n    }\n    var imgArr:Block[] = [];\n\n    if(blocks) imgArr = SelectImg(blocks);\n    console.log(imgArr)\n\n    function handleClick(e:number){\n        console.log(e);\n    }\n\n    return(\n        <div className={styles.container}>\n            {\n                imgArr?imgArr.map((img,index)=>{return(\n                    <div>{index}\n                        {/* <img \n                        key={index}\n                        src={img?.options?.url} \n                        alt={img?.data?.description?.toString()} \n                        width=\"100%\" height=\"100%\" \n                        // onClick={()=>handleClick(index)}\n                        /> */}\n                    </div>\n                )            \n                }):(<div></div>)    \n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}