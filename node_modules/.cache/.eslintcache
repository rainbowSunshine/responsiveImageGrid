[{"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/index.tsx":"1","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/reportWebVitals.ts":"2","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/App.tsx":"3","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/blocks.ts":"4","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/util/ErrorBoundary.tsx":"5","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx":"6","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/InfoPanel/InfoPanel.tsx":"7","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/Header/Header.tsx":"8","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid_old.tsx":"9"},{"size":504,"mtime":1673403552995,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1673283020731,"results":"12","hashOfConfig":"11"},{"size":3218,"mtime":1675742186975,"results":"13","hashOfConfig":"11"},{"size":6334,"mtime":1673283020729,"results":"14","hashOfConfig":"11"},{"size":1395,"mtime":1673363720404,"results":"15","hashOfConfig":"11"},{"size":1851,"mtime":1675741978510,"results":"16","hashOfConfig":"11"},{"size":1082,"mtime":1675740997973,"results":"17","hashOfConfig":"11"},{"size":151,"mtime":1675740280626,"results":"18","hashOfConfig":"11"},{"size":1460,"mtime":1675732294053,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w7yr9p",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/index.tsx",[],[],"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/reportWebVitals.ts",[],[],"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/App.tsx",["50","51"],[],"import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport React from 'react';\n\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Block,getBlocks } from './blocks';\n\nimport { Header } from './components/Header/Header';\nimport { ImageGrid } from './components/ImageGrid/ImageGrid';\nimport { InfoPanel } from './components/InfoPanel/InfoPanel';\n\n\nexport const App = () => {\n  const [blocks, setBlocks] = React.useState<Block | undefined>(undefined);\n  const [info, setInfo] = React.useState<Block|undefined>(undefined);\n \n  //Load the blocks \n  React.useEffect(()=>{\n    let abortController: AbortController = new AbortController();\n    let aborted = abortController.signal.aborted;\n\n    (async ()=>{\n      const resp = await getBlocks();\n      aborted = abortController.signal.aborted;\n      if (aborted === false) {\n        setBlocks(resp);\n      }\n    })();\n\n    return () => abortController.abort();\n  },[])  \n\n  // function handleClick(event: React.MouseEvent<HTMLElement>): void{\n  //   // setInfo(img);\n  //   console.log('handleClick:',event);\n  //  }\n\n  function handleClick(img: Block): void{\n    setInfo(img);\n    console.log('handleClick:',img);\n   }\n  \n  return (\n    <Router>\n      <Header />\n      <main>\n      {!blocks? <div><h1>Loading...wait for the response</h1></div>:\n        <ImageGrid blocks={blocks} onClick={handleClick}/>\n      }\n        <InfoPanel \n          id={info?.id} \n          description={info?.data?.description.toString()} \n          dimensions={info?.data?.width.toString()+\" x \"+info?.data?.height.toString()} \n          createdAt={info?.data?.createdAt.toString()}\n          />\n      </main>\n    </Router>\n    // <Router>\n    //   <Header />\n    //   <main>\n    //     <Box sx={{ flexGrow: 1, mr:60,p:2}}>\n    //     {!blocks? <div><h1>Loading...wait for the response</h1></div>:\n    //     <ErrorBoundary>\n    //       <Grid container spacing={{ xs: 3, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n    //        <Routes>                 \n    //         <Route  path=\"/:imgid\"  element= {\n    //             imgarr ?\n    //              imgarr.map((img,index)=>\n    //               <Grid item xs={2} sm={4} md={4} key={index} >\n    //                   <ErrorBoundary><ImageGridO data={img} info={info} onClick={()=>onClick(img)}/></ErrorBoundary>\n    //               </Grid>\n    //               )\n    //               :<Grid item>No image</Grid>\n    //         } /> \n    //        <Route  path=\"*\"  element= {\n    //             imgarr ?\n    //              imgarr.map((img,index)=>\n    //               <Grid item xs={2} sm={4} md={4} key={index} >\n    //                   <ErrorBoundary><ImageGridO data={img} info={info} onClick={()=>onClick(img)}/></ErrorBoundary>\n    //               </Grid>\n    //               ):<Grid item>No image</Grid>\n    //         } /> \n    //         </Routes>\n    //       </Grid>\n    //       </ErrorBoundary>\n    //       }\n    //     </Box>\n    //     <InfoPanel id={info?.id} description={info?.data?.description.toString()} dimensions={info?.data?.width.toString()+\" x \"+info?.data?.height.toString()} createdAt={info?.data?.createdAt.toString()}/>\n    //   </main>\n    // </Router>\n  );\n};\n","/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/blocks.ts",[],[],"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/util/ErrorBoundary.tsx",[],[],"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid.tsx",["52","53","54"],[],"import React from 'react';\n\nimport styles from './ImageGrid.module.css';\nimport { Block } from '../../blocks';\n\ntype ImageGridProps = {\n    blocks?: Block;\n//   onClick?: (event: React.MouseEvent<HTMLElement>) => void\n    onClick?: (img: Block) => void\n};\n\nexport const ImageGrid = (props: ImageGridProps) => {\n\n    const { blocks, onClick } = props;;\n    \n    //Iterate the blocks and put the blocks of type Image into an array and return the array\n    function SelectImg(rootblock:Block|null): Block[]{\n        let imgarr:Block[] = [];\n        if(rootblock){\n        if(rootblock?.type==='Image') imgarr.push(rootblock);      \n        else if(rootblock?.type==='Column'&&rootblock?.children) \n            rootblock?.children.map((el)=> {\n            if(el.type==='Image') {\n                imgarr.push(el);\n            }\n            else if(el.type==='Column'&& el.children) imgarr=imgarr.concat(SelectImg(el));\n            })\n        }\n        // console.log(\"return imgarr\", imgarr)\n        return imgarr;\n    }\n    var imgArr:Block[] = [];\n\n    if(blocks) imgArr = SelectImg(blocks);\n    console.log(\"imgArr \",imgArr)\n\n    function handleClick(e:Block){\n        console.log(e?.data?.description.toString());\n    }\n\n    return(\n        <div className={styles.imageGrid}>\n            {\n                imgArr?imgArr.map((img,index)=>{return(\n                    <div key={index} onClick={()=>{\n                            return props.onClick?props.onClick(img):null\n                        }}>\n                        <img\n                        src={img?.options?.url} \n                        alt={img?.data?.description?.toString()} \n                        width=\"100%\" height=\"100%\" \n                        />\n                    </div>\n                )            \n                }):(<div></div>)    \n            }\n        </div>\n    )\n}",["55","56"],"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/InfoPanel/InfoPanel.tsx",[],[],"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/Header/Header.tsx",[],[],"/Users/eileenwang/Documents/JS/Practice/simplr/imgview/src/components/ImageGrid/ImageGrid_old.tsx",["57"],[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":35,"nodeType":"60","messageId":"61","endLine":1,"endColumn":40},{"ruleId":"58","severity":1,"message":"62","line":1,"column":42,"nodeType":"60","messageId":"61","endLine":1,"endColumn":48},{"ruleId":"58","severity":1,"message":"63","line":14,"column":21,"nodeType":"60","messageId":"61","endLine":14,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":22,"column":41,"nodeType":"66","messageId":"67","endLine":22,"endColumn":43},{"ruleId":"58","severity":1,"message":"68","line":37,"column":14,"nodeType":"60","messageId":"61","endLine":37,"endColumn":25},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":34,"column":5,"nodeType":"75","endLine":34,"endColumn":11,"suggestions":"76"},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'onClick' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleClick' is defined but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [info, navigate]",{"range":"82","text":"83"},[878,884],"[info, navigate]"]